{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/reducers\";\nconst itemsReducer = combineReducers({\n  items: reducers.items,\n  filter: reducers.filter\n});\nconst store = configureStore({\n  reducer: {\n    contacts: itemsReducer\n  },\n  middleware: [...getDefaultMiddleware(), thunk]\n});\nexport default store; // import { combineReducers, createStore } from \"redux\";\n// import reducers from \"./reducers/reducers\";\n// const itemsReducer = combineReducers({\n//   items: reducers.items,\n//   filter: reducers.filter,\n// });\n// const rootReducer = combineReducers({\n//   contacts: itemsReducer,\n// });\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// export default store;","map":{"version":3,"sources":["/Users/jewkuza/Documents/goit-react-hw-07/redux-async/src/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","applyMiddleware","thunk","reducers","itemsReducer","items","filter","store","reducer","contacts","middleware"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,MAAMC,YAAY,GAAGJ,eAAe,CAAC;AACnCK,EAAAA,KAAK,EAAEF,QAAQ,CAACE,KADmB;AAEnCC,EAAAA,MAAM,EAAEH,QAAQ,CAACG;AAFkB,CAAD,CAApC;AAKA,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAC3BU,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAQ,EAAEL;AAAZ,GADkB;AAE3BM,EAAAA,UAAU,EAAE,CAAC,GAAGX,oBAAoB,EAAxB,EAA4BG,KAA5B;AAFe,CAAD,CAA5B;AAKA,eAAeK,KAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/reducers\";\n\nconst itemsReducer = combineReducers({\n  items: reducers.items,\n  filter: reducers.filter,\n});\n\nconst store = configureStore({\n  reducer: { contacts: itemsReducer },\n  middleware: [...getDefaultMiddleware(), thunk],\n});\n\nexport default store;\n\n// import { combineReducers, createStore } from \"redux\";\n// import reducers from \"./reducers/reducers\";\n\n// const itemsReducer = combineReducers({\n//   items: reducers.items,\n//   filter: reducers.filter,\n// });\n\n// const rootReducer = combineReducers({\n//   contacts: itemsReducer,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// export default store;\n"]},"metadata":{},"sourceType":"module"}