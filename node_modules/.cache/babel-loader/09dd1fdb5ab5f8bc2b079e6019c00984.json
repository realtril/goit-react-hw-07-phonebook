{"ast":null,"code":"import contactsActions from \"../actions/actions\";\nimport axios from \"axios\"; // const onDeleteContact = createAction(actionTypes.DCR);\n// const onDeleteSuccess = createAction(actionTypes.DCS);\n// const onDeleteFail = createAction(actionTypes.DCF);\n\nconst addContact = contact => dispatch => {\n  dispatch(contactsActions.onAddRequest());\n  axios.post(\"http://localhost:2000/contacts\", { ...contact\n  }).then(response => dispatch(contactsActions.onAddSuccess(response.data))).catch(error => dispatch(contactsActions.onAddFail(error)));\n};\n\nconst getContacts = () => dispatch => {\n  dispatch(contactsActions.onFetch());\n  axios.get(\"http://localhost:2000/contacts\").then(response => dispatch(contactsActions.onFetchSuccess(response.data))).catch(error => dispatch(contactsActions.onFetchError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(contactsActions.onDeleteContact());\n  axios.delete(`http://localhost:2000/contacts/${id}`).then(() => dispatch(contactsActions.onDeleteSuccess(id))).catch(error => dispatch(contactsActions.onDeleteFail(error)));\n};\n\ndeleteContact = id => async dispatch => {\n  try {\n    dispatch(itemRequest());\n    const result = await axios.delete(`http://localhost:2000/contacts/${id}`);\n    dispatch(deleteItem(id));\n  } catch (error) {\n    dispatch(itemError());\n  } finally {\n    dispatch(itemSuccess());\n  }\n};\n\nexport default {\n  addContact,\n  getContacts,\n  deleteContact\n};","map":{"version":3,"sources":["/Users/jewkuza/Documents/goit-react-hw-02-phonebook/phonebook/src/operations/contactOperations.js"],"names":["contactsActions","axios","addContact","contact","dispatch","onAddRequest","post","then","response","onAddSuccess","data","catch","error","onAddFail","getContacts","onFetch","get","onFetchSuccess","onFetchError","deleteContact","id","onDeleteContact","delete","onDeleteSuccess","onDeleteFail","itemRequest","result","deleteItem","itemError","itemSuccess"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAcC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAACJ,eAAe,CAACK,YAAhB,EAAD,CAAR;AACAJ,EAAAA,KAAK,CACFK,IADH,CACQ,gCADR,EAC0C,EAAE,GAAGH;AAAL,GAD1C,EAEGI,IAFH,CAESC,QAAD,IAAcJ,QAAQ,CAACJ,eAAe,CAACS,YAAhB,CAA6BD,QAAQ,CAACE,IAAtC,CAAD,CAF9B,EAGGC,KAHH,CAGUC,KAAD,IAAWR,QAAQ,CAACJ,eAAe,CAACa,SAAhB,CAA0BD,KAA1B,CAAD,CAH5B;AAID,CAND;;AAQA,MAAME,WAAW,GAAG,MAAOV,QAAD,IAAc;AACtCA,EAAAA,QAAQ,CAACJ,eAAe,CAACe,OAAhB,EAAD,CAAR;AACAd,EAAAA,KAAK,CACFe,GADH,CACO,gCADP,EAEGT,IAFH,CAESC,QAAD,IAAcJ,QAAQ,CAACJ,eAAe,CAACiB,cAAhB,CAA+BT,QAAQ,CAACE,IAAxC,CAAD,CAF9B,EAGGC,KAHH,CAGUC,KAAD,IAAWR,QAAQ,CAACJ,eAAe,CAACkB,YAAhB,CAA6BN,KAA7B,CAAD,CAH5B;AAID,CAND;;AAQA,MAAMO,aAAa,GAAIC,EAAD,IAAShB,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACJ,eAAe,CAACqB,eAAhB,EAAD,CAAR;AACApB,EAAAA,KAAK,CACFqB,MADH,CACW,kCAAiCF,EAAG,EAD/C,EAEGb,IAFH,CAEQ,MAAMH,QAAQ,CAACJ,eAAe,CAACuB,eAAhB,CAAgCH,EAAhC,CAAD,CAFtB,EAGGT,KAHH,CAGUC,KAAD,IAAWR,QAAQ,CAACJ,eAAe,CAACwB,YAAhB,CAA6BZ,KAA7B,CAAD,CAH5B;AAID,CAND;;AAQAO,aAAa,GAAIC,EAAD,IAAQ,MAAOhB,QAAP,IAAoB;AAC1C,MAAI;AACFA,IAAAA,QAAQ,CAACqB,WAAW,EAAZ,CAAR;AACA,UAAMC,MAAM,GAAG,MAAMzB,KAAK,CAACqB,MAAN,CAAc,kCAAiCF,EAAG,EAAlD,CAArB;AACAhB,IAAAA,QAAQ,CAACuB,UAAU,CAACP,EAAD,CAAX,CAAR;AACD,GAJD,CAIE,OAAOR,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAACwB,SAAS,EAAV,CAAR;AACD,GAND,SAMU;AACRxB,IAAAA,QAAQ,CAACyB,WAAW,EAAZ,CAAR;AACD;AACF,CAVD;;AAYA,eAAe;AACb3B,EAAAA,UADa;AAEbY,EAAAA,WAFa;AAGbK,EAAAA;AAHa,CAAf","sourcesContent":["import contactsActions from \"../actions/actions\";\nimport axios from \"axios\";\n\n// const onDeleteContact = createAction(actionTypes.DCR);\n// const onDeleteSuccess = createAction(actionTypes.DCS);\n// const onDeleteFail = createAction(actionTypes.DCF);\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(contactsActions.onAddRequest());\n  axios\n    .post(\"http://localhost:2000/contacts\", { ...contact })\n    .then((response) => dispatch(contactsActions.onAddSuccess(response.data)))\n    .catch((error) => dispatch(contactsActions.onAddFail(error)));\n};\n\nconst getContacts = () => (dispatch) => {\n  dispatch(contactsActions.onFetch());\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then((response) => dispatch(contactsActions.onFetchSuccess(response.data)))\n    .catch((error) => dispatch(contactsActions.onFetchError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(contactsActions.onDeleteContact());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.onDeleteSuccess(id)))\n    .catch((error) => dispatch(contactsActions.onDeleteFail(error)));\n};\n\ndeleteContact = (id) => async (dispatch) => {\n  try {\n    dispatch(itemRequest());\n    const result = await axios.delete(`http://localhost:2000/contacts/${id}`);\n    dispatch(deleteItem(id));\n  } catch (error) {\n    dispatch(itemError());\n  } finally {\n    dispatch(itemSuccess());\n  }\n};\n\nexport default {\n  addContact,\n  getContacts,\n  deleteContact,\n};\n"]},"metadata":{},"sourceType":"module"}