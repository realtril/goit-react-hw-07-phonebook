{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport actionTypes from \"../contacts/contactsActionTypes\";\n\nconst items = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.ADD:\n      return [...state, payload];\n\n    case actionTypes.DELETE:\n      return state.filter(contact => contact.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", action) => state;\n\nexport default combineReducers({\n  items,\n  filter\n}); //   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n//   isNameExist(name) {\n//     const result = this.state.contacts.some(\n//       (item) => item.name.toLowerCase() === name.toLowerCase()\n//     );\n//     if (result) {\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   }\n//   onchange = (e) => {\n//     this.setState({ filter: e.target.value });\n//   };\n//   render() {\n//     const { filter } = this.state;\n//     const filteredContacts = this.state.contacts.filter((person) => {\n//       return person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\n//     });\n//     return (\n//       <div className=\"phoneBookList\">\n//         <AddGuest\n//           onAddPerson={this.onAddPerson}\n//           isNameExist={this.isNameExist}\n//           state={this.state}\n//         />\n//         <div className=\"Guest\">\n//           <input\n//             type=\"text\"\n//             value={this.state.filter}\n//             onChange={this.onchange}\n//             className=\"filter\"\n//             placeholder=\"Find contact by name\"\n//           />\n//           <TransitionGroup className=\"Guests\">\n//             {filteredContacts.map((user, index) => {\n//               return (\n//                 <CSSTransition\n//                   key={uuidv4()}\n//                   timeout={250}\n//                   classNames=\"Guests-item-fade\"\n//                   unmountOnExit\n//                 >\n//                   <Guest\n//                     user={user}\n//                     key={uuidv4()}\n//                     onDeleteGuest={this.onDeleteGuest}\n//                     index={index}\n//                   />\n//                 </CSSTransition>\n//               );\n//             })}\n//           </TransitionGroup>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default GuestList;\n// AddGuest.propTypes = {\n//   onAddPerson: PropTypes.func.isRequired,\n//   isNameExist: PropTypes.func.isRequired,\n//   state: PropTypes.shape({\n//     contacts: PropTypes.array,\n//     filter: PropTypes.string,\n//   }),\n// };","map":{"version":3,"sources":["/Users/jewkuza/Documents/goit-react-hw-02-phonebook/phonebook/src/Redux/contacts/contactsReducer.js"],"names":["combineReducers","actionTypes","items","state","type","payload","ADD","DELETE","filter","contact","id","action"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC/C,UAAQD,IAAR;AACE,SAAKH,WAAW,CAACK,GAAjB;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAWE,OAAX,CAAP;;AACF,SAAKJ,WAAW,CAACM,MAAjB;AACE,aAAOJ,KAAK,CAACK,MAAN,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,OAAO,CAACK,EAAjD,CAAP;;AACF;AACE,aAAOP,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMK,MAAM,GAAG,CAACL,KAAK,GAAG,EAAT,EAAaQ,MAAb,KAAwBR,KAAvC;;AAEA,eAAeH,eAAe,CAAC;AAAEE,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAD,CAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\";\nimport actionTypes from \"../contacts/contactsActionTypes\";\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      return [...state, payload];\n    case actionTypes.DELETE:\n      return state.filter((contact) => contact.id !== payload.id);\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", action) => state;\n\nexport default combineReducers({ items, filter });\n\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   isNameExist(name) {\n//     const result = this.state.contacts.some(\n//       (item) => item.name.toLowerCase() === name.toLowerCase()\n//     );\n//     if (result) {\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   }\n\n//   onchange = (e) => {\n//     this.setState({ filter: e.target.value });\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const filteredContacts = this.state.contacts.filter((person) => {\n//       return person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\n//     });\n\n//     return (\n//       <div className=\"phoneBookList\">\n//         <AddGuest\n//           onAddPerson={this.onAddPerson}\n//           isNameExist={this.isNameExist}\n//           state={this.state}\n//         />\n//         <div className=\"Guest\">\n//           <input\n//             type=\"text\"\n//             value={this.state.filter}\n//             onChange={this.onchange}\n//             className=\"filter\"\n//             placeholder=\"Find contact by name\"\n//           />\n//           <TransitionGroup className=\"Guests\">\n//             {filteredContacts.map((user, index) => {\n//               return (\n//                 <CSSTransition\n//                   key={uuidv4()}\n//                   timeout={250}\n//                   classNames=\"Guests-item-fade\"\n//                   unmountOnExit\n//                 >\n//                   <Guest\n//                     user={user}\n//                     key={uuidv4()}\n//                     onDeleteGuest={this.onDeleteGuest}\n//                     index={index}\n//                   />\n//                 </CSSTransition>\n//               );\n//             })}\n//           </TransitionGroup>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default GuestList;\n\n// AddGuest.propTypes = {\n//   onAddPerson: PropTypes.func.isRequired,\n//   isNameExist: PropTypes.func.isRequired,\n//   state: PropTypes.shape({\n//     contacts: PropTypes.array,\n//     filter: PropTypes.string,\n//   }),\n// };\n"]},"metadata":{},"sourceType":"module"}