{"version":3,"sources":["selectors/selectors.js","constants/constants.js","actions/actions.js","operations/contactOperations.js","Components/Guest.js","Components/Notifications/AlertMessage.js","Components/AddGuest.js","Components/GuestList/GuestList.js","Components/GuestListDataContainer/GuestListDataContainer.js","Components/GuestPhonebook/GuestPhonebook.js","App.js","reducers/reducers.js","store.js","index.js"],"names":["contactsSelector","state","contacts","items","filterSelector","filter","getContactById","createSelector","_","contactId","find","contact","id","getFilteredContact","name","toLowerCase","includes","onAddRequest","createAction","actionTypes","onAddSuccess","onAddFail","onFetch","onFetchSuccess","onFetchError","onDeleteContact","onDeleteSuccess","onDeleteFail","onSearch","e","payload","target","value","onDelete","addContact","dispatch","contactsActions","axios","post","then","response","data","catch","error","getContacts","get","deleteContact","delete","connect","ownProps","user","contactOperations","number","className","onClick","Notification","clearAlert","AddGuest","alertOn","inputHandler","setState","postNum","isNameExist","props","onAdd","this","some","item","CSSTransition","in","appear","timeout","classNames","unmountOnExit","role","aria-label","type","onChange","placeholder","Component","mapDispatchToProps","actions","search","TransitionGroup","map","key","GuestListDataContainer","GuestPhoneBook","App","GuestPhonebook","createReducer","contactActions","itemsReducer","combineReducers","reducers","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86dd0dcf.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\nexport const contactsSelector = (state) => state.contacts.items;\nexport const filterSelector = (state) => state.contacts.filter;\n\nexport const getContactById = createSelector(\n  [contactsSelector, (_, contactId) => contactId],\n  (items, contactId) => items.find((contact) => contact.id === contactId)\n);\n\nexport const getFilteredContact = createSelector(\n  [contactsSelector, filterSelector],\n  (items, filter) =>\n    items.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","const SEARCH = \"@CONTACTS/SET_SEARCH\";\nconst ADD = \"@CONTACTS/ADD_ITEM\";\nconst DELETE = \"@CONTACTS/DELETE_ITEM\";\n\nconst ACR = \"@CONTACTS/ADD_REQUEST\";\nconst ACS = \"@CONTACTS/ADD_SUCCESS\";\nconst ACF = \"@CONTACTS/ADD_FAIL\";\n\nconst FCR = \"@CONTACTS/FETCH_REQUEST\";\nconst FCS = \"@CONTACTS/FETCH_SUCCESS\";\nconst FCF = \"@CONTACTS/FETCH_FAIL\";\n\nconst DCR = \"@CONTACTS/DELETE_CONTACT_REQUEST\";\nconst DCS = \"@CONTACTS/DELETE_CONTACT_SUCCESS\";\nconst DCF = \"@CONTACTS/DELETE_CONTACT_FAIL\";\n\nexport default {\n  SEARCH,\n  ADD,\n  DELETE,\n  ACR,\n  ACF,\n  ACS,\n  FCR,\n  FCS,\n  FCF,\n  DCR,\n  DCS,\n  DCF,\n};\n","import actionTypes from \"../constants/constants\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\n// const onSearch = (e) => ({\n//   type: actionTypes.SEARCH,\n//   payload: e.target.value,\n// });\n\n// const onAdd = (personData) => ({\n//   type: actionTypes.ADD,\n//   payload: { ...personData, id: uuid() },\n// });\n\n// const onDelete = (e) => {\n//   const id = e.target.id;\n//   return {\n//     type: actionTypes.DELETE,\n//     payload: id,\n//   };\n// };\n\n// export default {\n//   onDelete,\n//   onAdd,\n//   onSearch,\n// };\n\nconst onAddRequest = createAction(actionTypes.ACR);\nconst onAddSuccess = createAction(actionTypes.ACS);\nconst onAddFail = createAction(actionTypes.ACF);\n\nconst onFetch = createAction(actionTypes.FCR);\nconst onFetchSuccess = createAction(actionTypes.FCS);\nconst onFetchError = createAction(actionTypes.FCF);\n\nconst onDeleteContact = createAction(actionTypes.DCR);\nconst onDeleteSuccess = createAction(actionTypes.DCS);\nconst onDeleteFail = createAction(actionTypes.DCF);\n\nconst onSearch = createAction(actionTypes.SEARCH, (e) => ({\n  payload: e.target.value,\n}));\n\nconst onDelete = createAction(actionTypes.DELETE, (e) => ({\n  payload: e.target.id,\n}));\n\nexport default {\n  onDelete,\n  onSearch,\n  onAddRequest,\n  onAddSuccess,\n  onAddFail,\n  onFetch,\n  onFetchSuccess,\n  onFetchError,\n  onDeleteContact,\n  onDeleteSuccess,\n  onDeleteFail,\n};\n","import contactsActions from \"../actions/actions\";\nimport axios from \"axios\";\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(contactsActions.onAddRequest());\n  axios\n    .post(\"http://localhost:2000/contacts\", { ...contact })\n    .then((response) => dispatch(contactsActions.onAddSuccess(response.data)))\n    .catch((error) => dispatch(contactsActions.onAddFail(error)));\n};\n\nconst getContacts = () => (dispatch) => {\n  dispatch(contactsActions.onFetch());\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then((response) => dispatch(contactsActions.onFetchSuccess(response.data)))\n    .catch((error) => dispatch(contactsActions.onFetchError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(contactsActions.onDeleteContact());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.onDeleteSuccess(id)))\n    .catch((error) => dispatch(contactsActions.onDeleteFail(error)));\n};\n\nexport default {\n  addContact,\n  getContacts,\n  deleteContact,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContactById } from \"../selectors/selectors\";\nimport contactOperations from \"../operations/contactOperations\";\n\nconst Guest = ({ name, number, onDelete }) => {\n  return (\n    <div className=\"contact\">\n      <h2 className=\"contactName\">{name}</h2>\n      <p>{number}</p>\n      <button className=\"delete\" onClick={onDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const user = getContactById(state, ownProps.id);\n  return { ...user };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onDelete: () => dispatch(contactOperations.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Guest);\n","import React from \"react\";\nimport \"./AlertMessage.css\";\n\nconst Notification = ({ name, clearAlert }) => {\n  return (\n    <div className=\"wrapper\">\n      <h2>Contact of {name} is already in the list.</h2>\n      <p>Please enter the number which is not in the list.</p>\n      <button onClick={clearAlert}>Close</button>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport AlertMessage from \"./Notifications/AlertMessage\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../operations/contactOperations\";\nimport \"./Notifications/AlertAnimation.css\";\n\nclass AddGuest extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    alertOn: false,\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  isNameExist(name) {\n    const result = this.props.contacts.some(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    if (result) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  postNum = () => {\n    if (this.isNameExist(this.state.name)) {\n      this.props.onAdd(this.state);\n      this.setState({ name: \"\", number: \"\" });\n    } else {\n      this.setState({ alertOn: true });\n    }\n  };\n\n  clearAlert = () => {\n    this.setState({ alertOn: false });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"phoneBookApp\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames=\"logo-slideIn\"\n            unmountOnExit\n          >\n            <h1 className=\"logo\">\n              <span role=\"img\" aria-label=\"cool\">\n                😎\n              </span>\n              Phonebook\n              <span role=\"img\" aria-label=\"cool\">\n                😎\n              </span>\n            </h1>\n          </CSSTransition>\n          <div className=\"addContactForm\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.inputHandler}\n              placeholder=\"Name\"\n            />\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.inputHandler}\n              placeholder=\"Number\"\n            />\n            <button className=\"addGuest\" onClick={this.postNum}>\n              Add Guest\n            </button>\n            <CSSTransition\n              in={this.state.alertOn}\n              timeout={300}\n              classNames=\"wrapper\"\n              unmountOnExit\n            >\n              <AlertMessage\n                name={this.state.name}\n                clearAlert={this.clearAlert}\n              />\n            </CSSTransition>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  onAdd: contactOperations.addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddGuest);\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Guest from \"../Guest\";\nimport AddGuest from \"../AddGuest\";\nimport actions from \"../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../../operations/contactOperations\";\nimport { filterSelector, getFilteredContact } from \"../../selectors/selectors\";\n\nimport \"../Notifications/AlertAnimation.css\";\n\n// components/GuestList\nconst GuestList = ({ onAdd, search, onSearch, contacts }) => (\n  <div className=\"phoneBookList\">\n    <AddGuest contacts={contacts} onAdd={onAdd} />\n    <div className=\"Guest\">\n      <input\n        type=\"text\"\n        value={search}\n        onChange={onSearch}\n        className=\"filter\"\n        placeholder=\"Find contact by name\"\n      />\n      <TransitionGroup className=\"Guests\">\n        {contacts.map((user) => (\n          <CSSTransition\n            key={user.id}\n            timeout={250}\n            classNames=\"Guests-item-fade\"\n            unmountOnExit\n          >\n            <Guest id={user.id} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  // contacts: contactsSelector(state),\n  filter: filterSelector(state),\n  contacts: getFilteredContact(state),\n});\n\nconst mapDispatchToProps = {\n  onAdd: contactOperations.addContact,\n  onSearch: actions.onSearch,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestList);\n\n// GuestList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   onAdd: PropTypes.func.isRequired,\n//   onDelete: PropTypes.func.isRequired,\n//   onSearch: PropTypes.func.isRequired,\n//   search: PropTypes.string.isRequired,\n// };\n","import React, { Component } from \"react\";\nimport GuestList from \"../GuestList/GuestList\";\n\nclass GuestListDataContainer extends Component {\n  render() {\n    return <GuestList />;\n  }\n}\n\nexport default GuestListDataContainer;\n","import React, { Component } from \"react\";\nimport GuestListDataContainer from \"../GuestListDataContainer/GuestListDataContainer\";\n\nclass GuestPhoneBook extends Component {\n  render() {\n    return (\n      <div className=\"GuestPhoneBook\">\n        <GuestListDataContainer />\n      </div>\n    );\n  }\n}\n\nexport default GuestPhoneBook;\n","import React, { Component } from \"react\";\nimport GuestPhonebook from \"./Components/GuestPhonebook/GuestPhonebook\";\nimport \"./App.css\";\nimport contactOperations from \"./operations/contactOperations\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetch();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <GuestPhonebook />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onFetch: contactOperations.getContacts,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport actionTypes from \"../constants/constants\";\nimport contactActions from \"../actions/actions\";\n\nconst deleteContact = (state, { payload }) =>\n  state.filter((contact) => contact.id !== payload);\n\nconst items = createReducer([], {\n  [contactActions.onFetchSuccess]: (state, { payload }) => payload,\n  [contactActions.onAddSuccess]: (state, { payload }) => [...state, payload],\n  [contactActions.onDeleteSuccess]: deleteContact,\n});\n\nconst filter = createReducer(\"\", {\n  [actionTypes.SEARCH]: (state, { payload }) => (state = payload),\n});\n\n// const items = (\n//   state = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//   ],\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case actionTypes.ADD:\n//       return [...state, payload];\n//     case actionTypes.DELETE:\n//       return [...state.filter((contact) => contact.id !== payload)];\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.SEARCH:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default { items, filter };\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/reducers\";\n\nconst itemsReducer = combineReducers({\n  items: reducers.items,\n  filter: reducers.filter,\n});\n\nconst store = configureStore({\n  reducer: { contacts: itemsReducer },\n  middleware: [...getDefaultMiddleware(), thunk],\n});\n\nexport default store;\n\n// import { combineReducers, createStore } from \"redux\";\n// import reducers from \"./reducers/reducers\";\n\n// const itemsReducer = combineReducers({\n//   items: reducers.items,\n//   filter: reducers.filter,\n// });\n\n// const rootReducer = combineReducers({\n//   contacts: itemsReducer,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}